version: "3.5"

services:
  # Required
  caddy:
    image: caddy:latest
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - $PWD/Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - frontend
  web:
    image: bref/fpm-dev-gateway
    ports:
      - "8080:80"
    volumes:
      - .:/var/task
    depends_on:
      - php
    environment:
      HANDLER: public/index.php
  php:
    image: bref/php-74-fpm-dev
    volumes:
      - .:/var/task:ro
      - ./cache:/var/task/cache
      # To print error logs
      - ./storage/logs:/var/task/storage/logs
  mysql:
    container_name: laravel-mysql-ailyn
    image: mariadb:10
    volumes:
      - mysql-ailyn:/var/lib/mysql
    environment:
      MYSQL_DATABASE: homestead
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
    ports:
      - 13306:3306
  frontend:
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: frontend:latest
    ports:
      - 3000:3000
    env_file:
      - ./frontend/.env
  # Optional
  console:
    image: bref/php-74
    volumes:
      - .:/var/task:ro
    entrypoint: php
  # Development
  app:
    build:
      args:
        user: develop
        uid: 1000
      context: ./
      dockerfile: docker/Dockerfile
    image: laravel-ailyn
    container_name: laravel-ailyn-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www

  # Microservices-related containers
  dkron:
    image: dkron/dkron:latest
    ports:
      - 8085:8080
    command: agent --server --bootstrap-expect=1
  influxdb:
    image: influxdb:1.8-alpine
    ports:
      - 8086:8086
    environment:
      - INFLUXDB_DB=ailynms
    volumes:
      - ./influxdb:/var/lib/influxdb
  # docker-compose run influxdb-cli
  # influxdb-cli:
  #   image: influxdb
  #   entrypoint:
  #     - influx
  #     - -host
  #     - influxdb
  #   links:
  #     - influxdb
  # Web verification service
  web-verification:
    image: node:18
    user: "node"
    working_dir: /home/node/app
    expose:
      - "80"
    volumes:
      - ./microservices/http_validator:/home/node/app
    command: sh -c "npm install && npm start"
  # TCP verification service
  tcp-verification:
    image: node:18
    user: "node"
    working_dir: /home/node/app
    expose:
      - "80"
    volumes:
      - ./microservices/tcp_validator:/home/node/app
    command: sh -c "npm install && npm start"
  # ICMP verification service
  ping-verification:
    build:
      context: ./
      dockerfile: docker/ICMPValidatos.dockerfile
    image: icmp-valitador
    user: "node"
    working_dir: /home/node/app
    expose:
      - "80"
    volumes:
      - ./microservices/icmp_validator:/home/node/app
    command: sh -c "npm install && npm start"
  # DNS verification service
  dns-verification:
    image: node:18
    user: "node"
    working_dir: /home/node/app
    expose:
      - "80"
    volumes:
      - ./microservices/dns_validator:/home/node/app
    command: sh -c "npm install && npm start"
  # Nginx proxy for all microservices
  nginx:
    image: nginx:alpine
    ports:
      - 8888:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - dns-verification
      - ping-verification
      - tcp-verification
      - web-verification

volumes:
  mysql-ailyn:
    driver: "local"